# @team 35
# @author Jiacheng Ye   904973      Shanghai, China
# @author Shiyi Xu      780801      Melbourne, Australia
# @author Yuyao Ma      1111182     Yinchuan, China
# @author Yujing Guan   1011792     Fuzhou, China
# @author Zexin Yu      10328021    Dalian, China

---
# https://docs.docker.com/engine/install/linux-postinstall/
- name: Create docker group
  become: yes
  group:
    name: docker
    state: present

# avoid using sudo all the time
- name: Add ubuntu to docker group
  become: yes
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

# https://docs.docker.com/config/daemon/systemd/
- name: Create required directory
  become: yes
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Configure docker daemon proxy
  become: yes
  copy:
    src: http-proxy.conf
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf

# without the following 2 steps, 
# docerk cannot fetch pacakges from the internet
- name: Create .docker directory
  file:
    path: /home/ubuntu/.docker
    state: directory

- name: Configure docker client proxy
  become: yes
  copy:
    src: config.json
    dest: /home/ubuntu/.docker/config.json


# https://stackoverflow.com/questions/42040688/docker-daemon-start-using-ansible
- name: Restart docker
  become: yes
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes

# After couple days of working correctly,
# somehow restart docker is not enough
# I have to reconnect the server to be fully functional
# a strange bug...
- name: Reset ssh connection to allow user changes to affect new group
  meta: reset_connection

# comment out the rest if you want to delete existing docker
# but must make sure there is at least 1 existing docker
# otherwise will raise error

# # https://stackoverflow.com/questions/62184206/ansible-plybook-script-for-destroy-all-containers-and-remove-images-from-remote
# - name: List all containers
#   become: yes
#   docker_host_info:
#     containers: yes
#   register: containers_list

# - name: Stop all containers
#   become: yes
#   docker_container:
#     name: "{{ item }}"
#     state: stopped
#   loop: "{{ containers_list.containers | map(attribute='Id') | list }}"

# - name: Remove previous containers
#   become: yes
#   shell: |
#     docker rm $(docker ps -a -q);
#   when: containers_list.containers != 0

# # https://www.codenotary.com/blog/automatic-deployment-of-a-docker-compose-stack-using-ansible/
# - name: Remove previous images
#   become: yes
#   shell:
#     cmd: docker images -a -q|xargs -r docker rmi -f
