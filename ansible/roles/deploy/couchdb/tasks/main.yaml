# @team 35
# @author Jiacheng Ye   904973      Shanghai, China
# @author Shiyi Xu      780801      Melbourne, Australia
# @author Yuyao Ma      1111182     Yinchuan, China
# @author Yujing Guan   1011792     Fuzhou, China
# @author Zexin Yu      10328021    Dalian, China
# All processes are from workshop
# Transferred into ansible format by Jiacheng Ye

---

# - name: Start a container with a couchdb node
#   become: yes
#   docker_container:
#     name: "{{ couchdb_container_name}}"
#     image: "{{ couchdb_image }}"
#     ports:
#       - "{{couchdb_port}}:{{couchdb_port}}" # 80 due to change security_group later
#       - "9100:9100"
#       - "4369:4369"
#     env:
#       COUCHDB_PASSWORD: "{{ couchdb_pass }}"
#       COUCHDB_USER: "{{ couchdb_user }}"
#       NODENAME: "{{ ansible_host }}"
#       COUCHDB_SECRET: "{{ couchdb_cookie }}"

# - name: Check ansible vars
#   debug:
#     msg: " {{ ansible_user }} {{ ansible_host }} {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

# - name: Remove couch directory
#   become: yes
#   file:
#     path: '{{ couch.volume_path }}'
#     state: absent

# - name: Remove couch data directory
#   become: yes
#   file:
#     path: '{{ couch.dir }}'
#     state: absent

# ----- main parts, ignore parts above -----

- name: Create couch directory
  become: yes
  file:
    path: '{{ couch.dir }}'
    owner: '{{ ansible_user }}'
    group: docker
    recurse: yes
    state: directory

- name: Upload compose file by using j2
  become: yes
  template:
    src: docker-compose.yml.j2
    dest: '{{ couch.dir }}/docker-compose.yaml'
    owner: '{{ ansible_user }}'
    group: docker

# have to hard code this owner and group to 1000 & 0
# if they were set to ubuntu & docker
# somehow docker will automatically change it to 1000 & 998 when starting up
# then permission error will araise. 
# This hardcoding problem is well discussed with Yao Pan. 
# He is aware of this issue and comfirms that it is the only solution.
- name: Create data directory
  become: yes
  file:
    # owner: '{{ ansible_user }}'
    # group: docker
    path: '{{ couch.volume_path }}'
    owner: '1001'
    group: '0'
    recurse: yes
    state: directory

- name: run docker compose
  docker_compose:
    project_src: '{{ couch.dir }}'
    pull: yes
    state: present
    recreate: smart
  register: compose_output


# https://github.com/AURIN/comp90024/blob/master/couchdb/macos/run.sh
- name: Wait for a while
  wait_for:
    timeout: 60

# https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_info_module.html#ansible-collections-community-docker-docker-container-info-module
- name: Check the docker container is up and running
  docker_container_info:
    name: '{{ couch.name }}'
  register: result

- name: Print out result
  debug:
    msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

- name: Register node123
  set_fact:
    master: "{{ groups['Master'][0] }}"
    node2: "{{ groups['Worker1'][0] }}"
    node3: "{{ groups['Worker2'][0] }}"

- name: Check user status
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_users'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
    status_code: [200, 201, 202, 404, 405]
  register: _user

- name: add users
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_users'
    method: 'PUT'
    force_basic_auth: yes
    status_code: 201
  when: "_user.json.error is defined"

- name: Check _replicator status
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_replicator'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
    status_code: [200, 201, 202, 404, 405]
  register: _replicator

- name: add replicator
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_replicator'
    method: 'PUT'
    force_basic_auth: yes
    status_code: 201
  when: "_replicator.json.error is defined"

- name: Check global_changes status
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_global_changes'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
    status_code: [200, 201, 202, 404, 405]
  register: _global_changes

- name: add global_changes
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_global_changes'
    method: 'PUT'
    force_basic_auth: yes
    status_code: 201
  when: "_global_changes.json.error is defined"

# Check status a couchdb
# Somehow docker compose automatically sets up cluster.
# check if that is the case, and resgister the result
# if already set up clusters, skip next one.
- name: Check cluster status
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_cluster_setup'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
  register: couch_cluster
  until: couch_cluster.status == 200
  retries: 5
  delay: 10

- name: Setup couch on each node
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "{{ couch.user }}", "password": "{{ couch.pwd }}", "node_count": {{ couch.num_nodes }}}'
    body_format: json
    force_basic_auth: yes
  when: "couch_cluster.json.state == 'cluster_disabled'"

- name: Sleep for 10
  wait_for:
    timeout: 10

- name: Add nodes to cluster (1)
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ master }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "{{ couch.user }}", "password": "{{ couch.pwd }}", "port": 5984, "node_count": {{ couch.num_nodes }}, "remote_node": "{{ ansible_host }}", "remote_current_user": "{{ couch.user }}", "remote_current_password": "{{ couch.pwd }}" }'
    body_format: json
    force_basic_auth: yes
    # default is 200 = success, change to 201 for couchdb cluster
    status_code: 201
  when: "ansible_host != master and couch_cluster.json.state != 'finished'"

- name: Add nodes to cluster (2.1)
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ master }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "add_node", "host":"{{ ansible_host }}", "port": 5984, "username": "{{ couch.user }}", "password":"{{ couch.pwd }}", "singlenode": false}'
    body_format: json
    force_basic_auth: yes
    status_code: 201
  when: "ansible_host == node2 and couch_cluster.json.state != 'finished'"

- name: Add nodes to cluster (2.2)
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ master }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "add_node", "host":"{{ ansible_host }}", "port": 5984, "username": "{{ couch.user }}", "password":"{{ couch.pwd }}", "singlenode": false}'
    body_format: json
    force_basic_auth: yes
    status_code: 201
  when: "ansible_host == node3 and couch_cluster.json.state != 'finished'"

- name: Sleep for 10
  wait_for:
    timeout: 10

- name: Empty request to avoid an error message when finishing the cluster setup
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ master }}:5984'
    method: 'GET'
    force_basic_auth: yes

- name: Sleep for 20
  wait_for:
    timeout: 10

- name: Finish cluster setup
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ master }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "finish_cluster"}'
    body_format: json
    force_basic_auth: yes
    status_code: 201
    timeout: 120
  when: "ansible_host == master and couch_cluster.json.state != 'finished'"

- name: Sleep for 20
  wait_for:
    timeout: 20

- name: Check couch cluster setup
  uri:
    url: 'http://{{ couch.user }}:{{ couch.pwd }}@{{ ansible_host }}:5984/_cluster_setup'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
